#!/bin/sh
#
# General purpose zopen script
#
printSyntax()
{
  echo "" >&2
  echo "Syntax: zopen <command>" >&2
  echo "where <command> may be one of the following:" >&2
  echo " build: invokes the build script." >&2
  echo " download: downloads binaries" >&2
  echo " generate: generate a zopen project" >&2
  echo " update-cacert: update the cacert.pem file" >&2
  echo "" >&2
}

printHelp() 
{
  args=$*
  echo "zopen is a general purpose script to be used with the ZOSOpenTools ports." >&2
  printSyntax
  echo "Example usage:" >&2
  echo " # Build a port" >&2
  echo " zopen build -v # Build port" >&2
  echo " # List available ports to download" >&2
  echo " zopen download --list" >&2
  echo " # Download binaries from Github" >&2
  echo " zopen download" >&2
  echo " # Generate a zopen template project" >&2
  echo " zopen generate" >&2
}

export bindir="$( cd "$(dirname "$0")" >/dev/null 2>&1 && pwd -P )"
. "${bindir}/lib/common.inc"

args=$*
while [[ $# -gt 0 ]]; do
  case "$1" in
    "build")
      shift
      exec "${bindir}/lib/zopen-build" $@
      ;;
    "download")
      shift
      exec "${bindir}/lib/zopen-download" $@
      ;;
    "generate")
      shift
      exec "${bindir}/lib/zopen-generate" $@
      ;;
    "update-cacert")
      shift
      exec "${bindir}/lib/zopen-update-cacert" $@
      ;;
    "init")
      shift
      exec "${bindir}/lib/zopen-init" $@
      ;;
    "help" | "-h" | "--h" | "-help" | "--help" | "-?" | "-syntax")
      printHelp "${args}"
      exit 0
      ;;
    *)
      printSoftError "Unknown option ${1} specified"
      printSyntax "${args}"
      exit 8
      ;;
  esac
  shift;
done

printHelp
